@inject IScheduleUserService scheduleUserService
@inject IUserService userService

<div class="border mt-2">
    <table class="table table-striped align-middle">
        <thead>
            <tr>
                <th>Id</th>
                <th>Descrição</th>
                <th>Data/Hora Inicio</th>
                <th>Data/Hora Fim</th>
                <th>Cliente</th>
                <th>Cidade</th>
                <th>Gestor</th>
                <th>Usuário</th>
                <th class="text-center">Ações</th>
            </tr>
        </thead>
        <tbody>
            @if (ScheduleUserView is not null)
            {
                var schedules = ScheduleUserView.ScheduleUsersDto;
                var managers = UserViewManager!.UsersDto;
                if (schedules is not null)
                {
                    @foreach (var schedule in schedules)
                    {
                        <tr>
                            <td>@schedule.Id</td>
                            <td>@schedule.Description</td>
                            <td>@schedule.DateStart.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@schedule.DateFinal.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@schedule.Client</td>
                            <td>@schedule.City</td>
                            @{
                                var manager = managers!.FirstOrDefault(f => f.Id == schedule.ManagerId, new UserDto()).Name;

                                if (manager is not null)
                                {
                                    <td>@manager</td>
                                }
                            }
                            <td>@schedule.User</td>

                            <td>
                                <button data-bs-toggle="modal" data-bs-target="#tableScheduleDatail-@schedule.Id" class="btn btn-info">
                                    Detalhe
                                </button>
                                <TableScheduleDetailModal ScheduleUserId="@schedule.Id" />
                                <button data-bs-toggle="modal" data-bs-target="#editSchedule-@schedule.Id" class="btn btn-info">
                                    Editar
                                </button>
                                <EditScheduleUserModal ScheduleId="@schedule.Id" DataUpdated="@(() => DataUpdated())" />
                                <button data-bs-toggle="modal" data-bs-target="#deleteUser-@schedule.Id" class="btn btn-danger">
                                    Excluir
                                </button>
                                <DeleteScheduleUserModal ScheduleId="@schedule.Id" DataUpdated="@(() => DataUpdated())" />
                            </td>
                        </tr>
                    }
                }
            }

        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public ScheduleUserView? ScheduleUserView { get; set; }
    [Parameter]
    public UserView? UserViewManager { get; set; }

    private async void DataUpdated()
    {
        ScheduleUserView = await scheduleUserService.GetAll();
        //UserViewManager = await userService.GetManagerAll();

        StateHasChanged();
    }
}