@inject IUserService userService

<div class="modal fade" id="newUser" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <EditForm Model="@UserDto" OnValidSubmit="Create">
                <DataAnnotationsValidator />

                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Cadastro de Usuário</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    <div class="row g-3">
                        <div class="col-6">
                            <label for="inName" class="form-label">Nome</label>
                            <InputText class="form-control" id="inName" @bind-Value="UserDto!.Name" placeholder="Name" />
                            <ValidationMessage For="@(() => UserDto.Name)" />

                        </div>
                        <div class="col-6">
                            <label for="inCellphone" class="form-label">Celular</label>
                            <InputText mask="(99) 9 9999-9999" type="tel" class="form-control" id="inCellphone" @bind-Value="UserDto!.Cellphone" placeholder="Celular" />
                            <ValidationMessage For="@(() => UserDto.Cellphone)" />
                        </div>

                        <div class="col-12">
                            <label for="inDescription" class="form-label">Descrição</label>
                            <InputText class="form-control" id="inDescription" @bind-Value="UserDto!.Description" placeholder="Descrição" />
                        </div>
                        <div class="col-12">
                            <label class="form-label">Opção</label>
                            <div class="form-check">
                                <InputCheckbox class="form-check-input" id="inActive" @bind-Value="UserDto!.Active" />
                                <label for="inActive" class="form-label">Ativo</label>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Salvar</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Action? DataUpdated { get; set; }

    private UserDto? UserDto { get; set; }
    private string modal = "";

    protected override async Task OnInitializedAsync()
    {
        UserDto ??= new();
        await base.OnInitializedAsync();
    }

    private async Task Create()
    {
        if (UserDto is not null)
        {
            var user = await userService.Create(UserDto);
            UpdateData();
            UserDto = new();
        }
    }

    private void UpdateData()
    {
        DataUpdated?.Invoke();
    }
}
