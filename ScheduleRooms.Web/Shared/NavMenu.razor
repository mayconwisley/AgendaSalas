@inject IUserStorageService userStorageService
<div>
    <ul class="nav nav-tabs nav justify-content-center">
        <li class="nav-item">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">Calendário</NavLink>
        </li>
       
        @{

            if (UserSessionDto is not null)
            {
                if (UserSessionDto.Manager == true)
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="User" Match="NavLinkMatch.Prefix">Colaborador</NavLink>
                    </li>
                }
            }
        }

        <li class="nav-item">
            <NavLink class="nav-link" href="Client" Match="NavLinkMatch.Prefix">Cliente</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="ClientResponsible" Match="NavLinkMatch.Prefix">Responsável Cliente</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="ScheduleUser" Match="NavLinkMatch.Prefix">Agenda Colaborador</NavLink>
        </li>
    </ul>
</div>
@code {

    private bool collapseNavMenu = true;
    private UserSessionDto? UserSessionDto;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        UserSessionDto = new();
        UserSessionDto = await userStorageService.GetUserSession();

        await base.OnInitializedAsync();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
