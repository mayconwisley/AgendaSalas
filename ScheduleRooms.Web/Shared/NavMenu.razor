@inject IUserService userService
<div>
    <ul class="nav nav-tabs nav justify-content-center">
        <li class="nav-item">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">Calendário</NavLink>
        </li>
        @*  <li class="nav-item">
        <NavLink class="nav-link" href="Room" Match="NavLinkMatch.Prefix">Salas</NavLink>
        </li>
        <li class="nav-item">
        <NavLink class="nav-link" href="ScheduleRoom" Match="NavLinkMatch.Prefix">Agenda Salas</NavLink>
        </li> *@

        @{
            
            if (userDto is not null)
            {
                <li class="nav-item">
                    <NavLink class="nav-link" href="User" Match="NavLinkMatch.Prefix">Usuários</NavLink>
                </li>
            }
        }
        
        <li class="nav-item">
            <NavLink class="nav-link" href="Client" Match="NavLinkMatch.Prefix">Cliente</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="ScheduleUser" Match="NavLinkMatch.Prefix">Agenda Usuários</NavLink>
        </li>
    </ul>
</div>
@code {

    [Parameter]
    public string? Username { get; set; }

    private bool collapseNavMenu = true;

    private UserDto? userDto;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private async Task Teste(string username)
    {
        userDto = await userService.GetManagerUsername(username);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
