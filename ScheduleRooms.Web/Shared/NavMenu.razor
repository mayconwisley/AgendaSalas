@inject IUserStorageService userStorageService
<div>
    <ul class="nav nav-tabs nav justify-content-center">
        <li class="nav-item">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">Calendário</NavLink>
        </li>
        @*  <li class="nav-item">
        <NavLink class="nav-link" href="Room" Match="NavLinkMatch.Prefix">Salas</NavLink>
        </li>
        <li class="nav-item">
        <NavLink class="nav-link" href="ScheduleRoom" Match="NavLinkMatch.Prefix">Agenda Salas</NavLink>
        </li> *@

        @{

            if (UserDto is not null)
            {
                if (UserDto.Manager == true)
                {
                    <li class="nav-item">
                        <NavLink class="nav-link" href="User" Match="NavLinkMatch.Prefix">Usuários</NavLink>
                    </li>
                }
            }
        }

        <li class="nav-item">
            <NavLink class="nav-link" href="Client" Match="NavLinkMatch.Prefix">Cliente</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="ScheduleUser" Match="NavLinkMatch.Prefix">Agenda Usuários</NavLink>
        </li>
    </ul>
</div>
@code {

    private bool collapseNavMenu = true;
    private UserDto? UserDto;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        UserDto = new();
        UserDto = await userStorageService.GetUserSession();

        await base.OnInitializedAsync();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
