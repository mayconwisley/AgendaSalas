@page "/User"
@layout NewLayout
@inject ITokenStorageService tokenStorageService
@inject IUserStorageService userStorageService
@inject IUserService userService
@inject NavigationManager navigationManager

<h3>Cadastro de Colaborador</h3>
<NavLink href="UserCreate" class="btn btn-info">
    Novo Colaborador
</NavLink>

@if (userView is null)
{
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <TableUser UserView="@userView" />
    <PaginationTable PageCurrent="@ReceberPagina"
                     TotalData="@userView.TotalData"
                     Page="@userView.Page"
                     TotalPage="@userView.TotalPage" />
    @* <InsertUserModal DataUpdated="@(() => DataUpdated())" /> *@
}

@code {
    private UserView? userView;
    private LoginDto? LoginDto { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var token = await tokenStorageService.GetToken(LoginDto!);
        if (token.Bearer is null)
        {
            await tokenStorageService.RemoverToken();
            navigationManager.NavigateTo("/Login", true);
        }
        var user = await userStorageService.GetUserSession();
        if (user.Manager == false)
        {
            navigationManager.NavigateTo("/", true);
        }

        if (token.Bearer is not null)
        {
            userView = await userService.GetAll();
        }
    }

    private async void DataUpdated()
    {
        userView = await userService.GetAll();
        StateHasChanged();
    }
    private async Task ReceberPagina(int pageCurrent)
    {
        userView = await userService.GetAll(pageCurrent);

    }
}