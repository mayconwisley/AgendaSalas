@inject ISalaService salaService

<div class="border mt-2">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nome</th>
                <th>Ramal</th>
                <th>Descrição</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @if (salaView is not null)
            {
                var salas = salaView.SalasDto;

                if (salas is not null)
                {
                    @foreach (var sala in salas)
                    {
                        <tr>
                            <td>@sala.Id</td>
                            <td>@sala.Nome</td>
                            <td>@sala.Ramal</td>
                            <td>@sala.Descricao</td>
                            <td>
                                <a href="/EditSala/@sala.Id">Editar</a> |
                                <button @onclick="@(p => Delete(sala.Id))">Excluir</button>
                            </td>
                        </tr>
                    }
                }
            }

        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public SalaView? salaView { get; set; }

    private async Task Delete(int id)
    {
        var isDelete = await salaService.Delete(id);

        salaView = await salaService.GetAll();
        StateHasChanged();
    }
}